syntax = 'proto3';
package afb;

option go_package="github.com/habiliai/habiliai/api/pkg/habapi";

import "google/protobuf/empty.proto";

service HabiliApi {
  rpc GetMissions(google.protobuf.Empty) returns (GetMissionsResponse);
  rpc GetMission(MissionId) returns (Mission);

  rpc GetAgents(google.protobuf.Empty) returns (GetAgentsResponse);

  rpc CreateThread(CreateThreadRequest) returns (ThreadId);
  rpc GetThread(ThreadId) returns (Thread);

  rpc AddMessage(AddMessageRequest) returns (google.protobuf.Empty);

  rpc GetWorkflowStatus(ThreadId) returns (WorkflowStatus);
  rpc GetAgentsStatus(ThreadId) returns (AgentsStatus);
  rpc GetThreadStatus(GetThreadStatusRequest) returns (ThreadStatus);
}

message GetThreadStatusRequest {
  int32 thread_id = 1;
  string last_message_id = 2;
}

message ThreadStatus {
  bool has_new_message = 1;
}

message ActionWork {
  bool done = 1;
  Action action = 2;
}

message AgentWork {
  enum Status {
    UNSPECIFIED = 0;
    WORKING = 1;
    IDLE = 2;
    WAITING = 3;
  }
  Agent agent = 1;
  Status status = 2;
}

message AgentsStatus {
  repeated AgentWork works = 1;
}

message WorkflowStatus {
  repeated ActionWork works = 1;
}

message MissionId {
  int32 id = 1;
}

message Action {
  int32 id = 1;
  Agent agent = 2;
  string subject = 3;
}

message Step {
  int32 id = 1;
  int32 seq_no = 3;
  repeated Action actions = 2;
}

message Thread {
  int32 id = 1;
  repeated Message messages = 2;
  int32 mission_id = 3;
}

message AgentMessageContent {
  string text = 1;
  Agent agent = 2;
}

message UserMessageContent {
  string text = 1;
  repeated string mentions = 2;
}

message Message {
  enum Role {
    UNSPECIFIED = 0;
    USER = 1;
    ASSISTANT = 2;
  }
  string id = 1;
  Role role = 2;
  string text = 3;
  optional Agent agent = 4;
  repeated string mentions = 5;
}

message GetMissionsResponse {
  repeated Mission missions = 1;
  int32 num_total = 2;
}

message Mission {
  int32 id = 1;
  string name = 2;
  repeated Step steps = 3;
  repeated int32 agent_ids = 4;
}

message CreateThreadRequest {
  int32 mission_id = 1;
}

message Agent {
  enum Status {
    UNSPECIFIED = 0;
    WORKING = 1;
    IDLE = 2;
    WAITING = 3;
  }
  string name = 1;
  string icon_url = 2;
  int32 id = 3;
  Status status = 4;
}

message GetAgentsResponse {
  repeated Agent agents = 1;
  int32 num_total = 2;
}

message AddMessageRequest {
  int32 thread_id = 1;
  optional string message = 2;
}

message ThreadId {
  int32 id = 1;
}